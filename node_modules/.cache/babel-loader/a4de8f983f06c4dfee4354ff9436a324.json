{"remainingRequest":"/home/beanyon/Desktop/workspace/time-partner/node_modules/babel-loader/lib/index.js!/home/beanyon/Desktop/workspace/time-partner/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beanyon/Desktop/workspace/time-partner/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beanyon/Desktop/workspace/time-partner/src/components/Analysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beanyon/Desktop/workspace/time-partner/src/components/Analysis.vue","mtime":1556259612441},{"path":"/home/beanyon/Desktop/workspace/time-partner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beanyon/Desktop/workspace/time-partner/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/beanyon/Desktop/workspace/time-partner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beanyon/Desktop/workspace/time-partner/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Analysis',\n  data: function data() {\n    return {\n      // 要获取的数据类型:1 日报，2 周报，3 月报\n      type: 1,\n      abstract: {\n        'type': 1,\n        'title': '数据总览',\n        'subTitle': '今日数据',\n        'numActivity': 0,\n        'sumMinutes': 0\n      },\n      // 阶段时间卡片按任务统计\n      timeCardSumsByActivity: [],\n      // 阶段时间卡片按日期统计\n      timeCardSumsByDate: [],\n      // 阶段总的分钟数\n      minutesSum: 0\n    };\n  },\n  methods: {\n    /**\n     * 获取数据\n     */\n    getData: function getData() {\n      var _this = this;\n\n      this.$http.get(this.BASE_API + '/get-analysis-data?type=' + this.abstract.type).then(function (response) {\n        if (response.body.result) {\n          _this.calcMinutesSum(response.body.data);\n\n          _this.initTrendencyChart();\n\n          _this.initProportionChart();\n        } else {\n          _this.$toast.error(response.body.message);\n        }\n      });\n    },\n\n    /**\n     * 计算每天的分钟和\n     *\n     * @param timeCards 获取到的时间卡片\n     */\n    calcMinutesSum: function calcMinutesSum(timeCards) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = timeCards[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var timeCard = _step.value;\n          // 时间卡片的总时间\n          var timeCardSum = 0; // 计算每张时间卡片的总时间\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = timeCard.timeSpans[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var timeSpan = _step2.value;\n\n              if (timeSpan.startTime && timeSpan.endTime) {\n                var span = timeSpan.endTime - timeSpan.startTime;\n                var spanSum = span / 1000 / 60; // 时间卡片的总时间\n\n                timeCardSum += Math.ceil(spanSum);\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          timeCard.timeCardSum = timeCardSum; // 计算总的分钟数\n\n          this.abstract.sumMinutes += timeCardSum; // 计算同种任务在阶段内的总时间\n\n          if (this.timeCardSumsByActivity.length == 0) {\n            this.timeCardSumsByActivity.push(timeCard);\n          } else {\n            var exist = false;\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = this.timeCardSumsByActivity[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var timeCardRes = _step3.value;\n\n                if (timeCardRes.activity == timeCard.activity) {\n                  exist = true;\n                  timeCardRes.timeCardSum += timeCard.timeCardSum;\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            if (!exist) {\n              this.timeCardSumsByActivity.push(timeCard);\n            }\n          }\n\n          this.abstract.numActivity = this.timeCardSumsByActivity.length; // 每一天的总时间\n\n          var todaySum = 0;\n          timeCard.todaySum = todaySum; // 计算每一天的总时间\n\n          if (this.timeCardSumsByDate.length == 0) {\n            var date = new Date(timeCard.createdAt);\n            var daySum = {\n              'date': date.getMonth() + 1 + \"-\" + date.getDate(),\n              'minutes': timeCard.timeCardSum\n            };\n            this.timeCardSumsByDate.push(daySum);\n          } else {\n            var _exist = false;\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n              for (var _iterator4 = this.timeCardSumsByDate[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var _timeCardRes = _step4.value;\n\n                var dates = _timeCardRes.date.split(\"-\");\n\n                var dateAnalysisMonth = dates[0];\n                var dateAnalysisDay = dates[1];\n                var dateCard = new Date(timeCard.createdAt);\n\n                if (parseInt(dateAnalysisMonth) - 1 == dateCard.getMonth() && parseInt(dateAnalysisDay) == dateCard.getDate()) {\n                  _exist = true;\n                  _timeCardRes.minutes += timeCard.timeCardSum;\n                }\n              }\n            } catch (err) {\n              _didIteratorError4 = true;\n              _iteratorError4 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                  _iterator4.return();\n                }\n              } finally {\n                if (_didIteratorError4) {\n                  throw _iteratorError4;\n                }\n              }\n            }\n\n            if (!_exist) {\n              var _date = new Date(timeCard.createdAt);\n\n              var _daySum = {\n                'date': _date.getMonth() + 1 + \"-\" + _date.getDate(),\n                'minutes': timeCard.timeCardSum\n              };\n              this.timeCardSumsByDate.push(_daySum);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n\n    /**\n     * 初始化趋势折线图\n     */\n    initTrendencyChart: function initTrendencyChart() {\n      // 抽取要显示的数据\n      var dates = [];\n      var lineData = [];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.timeCardSumsByDate[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var timeCard = _step5.value;\n          dates.push(timeCard.date);\n          lineData.push(timeCard.minutes);\n        } // 基于准备好的dom，初始化echarts实例\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var trendencyChart = this.echarts.init(document.getElementById('trendency'));\n      var trendencyOption = {\n        xAxis: {\n          type: 'category',\n          data: dates\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: lineData,\n          type: 'line'\n        }]\n      }; // 绘制图表\n\n      trendencyChart.setOption(trendencyOption);\n    },\n\n    /**\n     * 初始化饼图\n     */\n    initProportionChart: function initProportionChart() {\n      // 抽取要显示的数据\n      var activities = [];\n      var dates = [];\n      var pieData = [];\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this.timeCardSumsByActivity[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var timeCard = _step6.value;\n          activities.push(timeCard.activity);\n          dates.push(timeCard.createdAt);\n          pieData.push({\n            'value': timeCard.timeCardSum,\n            'name': timeCard.activity\n          });\n        } // 基于准备好的dom，初始化echarts实例\n\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      var trendencyChart = this.echarts.init(document.getElementById('proportion'));\n      var trendencyOption = {\n        tooltip: {\n          trigger: 'item',\n          formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n        },\n        legend: {\n          orient: 'vertical',\n          x: 'left',\n          data: activities\n        },\n        series: [{\n          name: '时间卡片（分钟）',\n          type: 'pie',\n          radius: ['50%', '70%'],\n          avoidLabelOverlap: false,\n          label: {\n            normal: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              show: true,\n              textStyle: {\n                fontSize: '30',\n                fontWeight: 'bold'\n              }\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          data: pieData\n        }]\n      }; // 绘制图表\n\n      trendencyChart.setOption(trendencyOption);\n    }\n  },\n  mounted: function mounted() {\n    this.getData();\n  }\n};",{"version":3,"sources":["Analysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <mu-container>\n    <!-- TitleBar -->\n    <mu-appbar style=\"width: 100%;\" color=\"primary\" title=\"数据分析\">\n      <mu-button icon slot=\"left\" @click=\"back()\">\n        <mu-icon value=\"chevron_left\"></mu-icon>\n      </mu-button>\n      <router-link to=\"/sign-in\" slot=\"right\" style=\"color: #fff;height: inherit;\">\n        <mu-button flat>筛选</mu-button>\n      </router-link>\n    </mu-appbar>\n    <!-- Main Content -->\n    <mu-container>\n      <mu-card class=\"abstract\">\n        <mu-card-title :title=\"abstract.title\" :sub-title=\"abstract.subTitle\"></mu-card-title>\n        <div class=\"abstract-item\"><p>{{abstract.numActivity}}</p>工作数</div>\n        <div class=\"abstract-item\"><p>{{abstract.sumMinutes}}</p>时长(min)</div>\n      </mu-card>\n      <div class=\"charts\">\n        <h2 class=\"chart-title-proportion\">7日内工作占比</h2>\n        <div id=\"proportion\" :style=\"{width: '100%', height: '300px'}\"></div>\n      </div>\n      <div class=\"charts\">\n        <h2 class=\"chart-title-trendency\">7日内每日走势</h2>\n        <div id=\"trendency\" :style=\"{width: '100%', height: '300px'}\"></div>\n      </div>\n    </mu-container>\n  </mu-container>\n</template>\n<script>\n\nexport default {\n  name: 'Analysis',\n  data() {\n    return {\n      // 要获取的数据类型:1 日报，2 周报，3 月报\n      type: 1,\n      abstract: {\n        'type': 1,\n        'title': '数据总览',\n        'subTitle': '今日数据',\n        'numActivity': 0,\n        'sumMinutes': 0\n      },\n      // 阶段时间卡片按任务统计\n      timeCardSumsByActivity: [],\n      // 阶段时间卡片按日期统计\n      timeCardSumsByDate: [],\n      // 阶段总的分钟数\n      minutesSum: 0\n    }\n  },\n  methods: {\n    /**\n     * 获取数据\n     */\n    getData() {\n      this.$http.get(this.BASE_API + '/get-analysis-data?type=' + this.abstract.type).then(response => {\n        if (response.body.result) {\n          this.calcMinutesSum(response.body.data)\n          this.initTrendencyChart()\n          this.initProportionChart()\n        } else {\n          this.$toast.error(response.body.message)\n        }\n      })\n    },\n\n    /**\n     * 计算每天的分钟和\n     *\n     * @param timeCards 获取到的时间卡片\n     */\n    calcMinutesSum(timeCards) {\n      for(let timeCard of timeCards) {\n        // 时间卡片的总时间\n        let timeCardSum = 0\n\n        // 计算每张时间卡片的总时间\n        for(let timeSpan of timeCard.timeSpans) {\n          if(timeSpan.startTime && timeSpan.endTime) {\n            let span = timeSpan.endTime - timeSpan.startTime\n            let spanSum = span / 1000 / 60\n            // 时间卡片的总时间\n            timeCardSum += Math.ceil(spanSum)\n          }\n        }\n        timeCard.timeCardSum = timeCardSum\n        // 计算总的分钟数\n        this.abstract.sumMinutes += timeCardSum\n\n        // 计算同种任务在阶段内的总时间\n        if(this.timeCardSumsByActivity.length == 0) {\n          this.timeCardSumsByActivity.push(timeCard)\n        } else {\n          let exist = false\n          for(let timeCardRes of this.timeCardSumsByActivity) {\n            if(timeCardRes.activity == timeCard.activity) {\n              exist = true\n              timeCardRes.timeCardSum += timeCard.timeCardSum\n            }\n          }\n\n          if(!exist) {\n            this.timeCardSumsByActivity.push(timeCard)\n          }\n        }\n        this.abstract.numActivity = this.timeCardSumsByActivity.length\n\n        // 每一天的总时间\n        let todaySum = 0\n        timeCard.todaySum = todaySum\n\n        // 计算每一天的总时间\n        if(this.timeCardSumsByDate.length == 0) {\n          let date = new Date(timeCard.createdAt)\n          let daySum = {\n            'date': (date.getMonth()+1) + \"-\" + date.getDate(),\n            'minutes': timeCard.timeCardSum\n          }\n          this.timeCardSumsByDate.push(daySum)\n        } else {\n          let exist = false\n          for(let timeCardRes of this.timeCardSumsByDate) {\n            let dates = timeCardRes.date.split(\"-\")\n            let dateAnalysisMonth = dates[0]\n            let dateAnalysisDay = dates[1]\n            let dateCard = new Date(timeCard.createdAt)\n            if(parseInt(dateAnalysisMonth)-1 == dateCard.getMonth() && parseInt(dateAnalysisDay) == dateCard.getDate()){\n              exist = true\n              timeCardRes.minutes += timeCard.timeCardSum\n            }\n          }\n\n          if(!exist) {\n            let date = new Date(timeCard.createdAt)\n            let daySum = {\n              'date': (date.getMonth()+1) + \"-\" + date.getDate(),\n              'minutes': timeCard.timeCardSum\n            }\n            this.timeCardSumsByDate.push(daySum)\n          }\n        }\n      }\n    },\n\n    /**\n     * 初始化趋势折线图\n     */\n    initTrendencyChart() {\n      // 抽取要显示的数据\n      let dates = []\n      let lineData = []\n      for(let timeCard of this.timeCardSumsByDate) {\n        dates.push(timeCard.date)\n        lineData.push(timeCard.minutes)\n      }\n\n      // 基于准备好的dom，初始化echarts实例\n      var trendencyChart = this.echarts.init(document.getElementById('trendency'));\n      var trendencyOption = {\n        xAxis: {\n            type: 'category',\n            data: dates\n        },\n        yAxis: {\n            type: 'value'\n        },\n        series: [{\n            data: lineData,\n            type: 'line'\n        }]\n      };\n\n      // 绘制图表\n      trendencyChart.setOption(trendencyOption);\n    },\n\n    /**\n     * 初始化饼图\n     */\n    initProportionChart() {\n      // 抽取要显示的数据\n      let activities = []\n      let dates = []\n      let pieData = []\n      for(let timeCard of this.timeCardSumsByActivity) {\n        activities.push(timeCard.activity)\n        dates.push(timeCard.createdAt)\n        pieData.push({'value': timeCard.timeCardSum, 'name': timeCard.activity})\n      }\n\n      // 基于准备好的dom，初始化echarts实例\n      var trendencyChart = this.echarts.init(document.getElementById('proportion'));\n\n      let trendencyOption = {\n          tooltip: {\n              trigger: 'item',\n              formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n          },\n          legend: {\n              orient: 'vertical',\n              x: 'left',\n              data: activities\n          },\n          series: [\n              {\n                  name:'时间卡片（分钟）',\n                  type:'pie',\n                  radius: ['50%', '70%'],\n                  avoidLabelOverlap: false,\n                  label: {\n                      normal: {\n                          show: false,\n                          position: 'center'\n                      },\n                      emphasis: {\n                          show: true,\n                          textStyle: {\n                              fontSize: '30',\n                              fontWeight: 'bold'\n                          }\n                      }\n                  },\n                  labelLine: {\n                      normal: {\n                          show: false\n                      }\n                  },\n                  data: pieData\n              }\n          ]\n      };\n\n      // 绘制图表\n      trendencyChart.setOption(trendencyOption);\n    }\n  },\n  mounted() {\n    this.getData()\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.abstract {\n  width: 100%;\n  margin: 18px 0;\n}\n\n.abstract-item {\n  width: 50%;\n  display: inline-block;\n  margin-bottom: 20px;\n  font-size: 16px;\n  line-height: 14px;\n  letter-spacing: 2px;\n}\n\n.abstract-item p {\n  color: #e6a23c;\n  font-size: 32px;\n  font-weight: bold;\n  margin: 24px 0;\n}\n\n.charts:nth-child(1) {\n  margin-top: 30px;\n}\n\n.chart-title-proportion {\n  margin: 40px;\n}\n\n.chart-title-trendency {\n  margin: 0;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}
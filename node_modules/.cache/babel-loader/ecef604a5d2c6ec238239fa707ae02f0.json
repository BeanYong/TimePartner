{"remainingRequest":"/home/beanyon/Desktop/workspace/time-partner/node_modules/babel-loader/lib/index.js!/home/beanyon/Desktop/workspace/time-partner/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/beanyon/Desktop/workspace/time-partner/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/beanyon/Desktop/workspace/time-partner/src/components/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/beanyon/Desktop/workspace/time-partner/src/components/Home.vue","mtime":1545371202937},{"path":"/home/beanyon/Desktop/workspace/time-partner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beanyon/Desktop/workspace/time-partner/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/beanyon/Desktop/workspace/time-partner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/beanyon/Desktop/workspace/time-partner/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Home',\n  data: function data() {\n    return {\n      // 时间卡片数组\n      timeCards: []\n    };\n  },\n  methods: {\n    /**\n     * 创建时间卡片\n     */\n    createTimeCard: function createTimeCard() {\n      var _this = this;\n\n      this.$http.get(this.BASE_API + '/create-time-card?user_id=' + this.userInfo.id).then(function (response) {\n        if (response.body.result) {\n          _this.getTodayTimeCard();\n\n          _this.$toast.success(response.body.message);\n        } else {\n          _this.$toast.error(response.body.message);\n        }\n      });\n    },\n\n    /**\n     * 为时间卡片添加时间段\n     */\n    createTimeSpan: function createTimeSpan(cardIndex) {\n      this.timeCards[cardIndex].timeSpans.push({\n        id: -1,\n        startTime: 0,\n        endTime: 0\n      });\n    },\n\n    /**\n     * 获取今天的时间卡片\n     */\n    getTodayTimeCard: function getTodayTimeCard() {\n      var _this2 = this;\n\n      this.$http.get(this.BASE_API + '/get-today-time-card?user_id=' + this.userInfo.id).then(function (response) {\n        if (response.body.result) {\n          _this2.timeCards = response.body.data;\n        }\n      });\n    },\n\n    /**\n     * 事件选择器值发生变化的监听器，用于创建TimeCard的TimeSpan\n     */\n    onDatePickerChange: function onDatePickerChange(cardIndex, spanIndex, type) {\n      var _this3 = this;\n\n      var startTime = this.timeCards[cardIndex].timeSpans[spanIndex].startTime;\n      var endTime = this.timeCards[cardIndex].timeSpans[spanIndex].endTime;\n      var cardId = this.timeCards[cardIndex].id;\n      var spanId = this.timeCards[cardIndex].timeSpans[spanIndex].id;\n\n      if (startTime != 0 && endTime != 0) {\n        if (endTime - startTime > 0) {\n          if (spanId == -1) {\n            // 创建\n            this.$http.get(this.BASE_API + '/create-time-span?card_id=' + cardId + '&start_time=' + startTime.getTime() + '&end_time=' + endTime.getTime()).then(function (response) {\n              if (response.body.result) {\n                _this3.getTodayTimeCard();\n\n                _this3.$toast.success(response.body.message);\n              } else {\n                _this3.$toast.error(response.body.message);\n              }\n            });\n          } else {\n            //更新\n            this.$http.get(this.BASE_API + '/update-time-span?card_id=' + cardId + '&span_id=' + spanId + '&start_time=' + startTime.getTime() + '&end_time=' + endTime.getTime()).then(function (response) {\n              if (response.body.result) {\n                _this3.getTodayTimeCard();\n\n                _this3.$toast.success(response.body.message);\n              } else {\n                _this3.$toast.error(response.body.message);\n              }\n            });\n          }\n        } else {\n          this.$toast.error('结束时间不能小于开始时间，请重新输入');\n        }\n      }\n    },\n\n    /**\n     * 更新TimeCard的activity\n     */\n    updateCardActivity: function updateCardActivity(cardIndex) {\n      var _this4 = this;\n\n      var cardId = this.timeCards[cardIndex].id;\n      var activity = this.timeCards[cardIndex].activity.trim();\n\n      if (activity.length > 0) {\n        this.$http.get(this.BASE_API + '/update-card-activity?card_id=' + cardId + '&activity=' + activity).then(function (response) {\n          if (response.body.result) {\n            _this4.$toast.success(response.body.message);\n          } else {\n            _this4.$toast.error(response.body.message);\n          }\n        });\n      }\n    },\n\n    /**\n     * 删除时间卡片\n     */\n    deleteTimeCard: function deleteTimeCard(cardIndex) {\n      var _this5 = this;\n\n      var cardId = this.timeCards[cardIndex].id;\n      this.$http.get(this.BASE_API + '/delete-time-card?card_id=' + cardId).then(function (response) {\n        if (response.body.result) {\n          _this5.getTodayTimeCard();\n\n          _this5.$toast.success(response.body.message);\n        } else {\n          _this5.$toast.error(response.body.message);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getTodayTimeCard();\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <mu-container>\n    <!-- TitleBar -->\n    <mu-appbar style=\"width: 100%;\" color=\"primary\">\n      <mu-button icon slot=\"left\">\n        <mu-icon value=\"menu\"></mu-icon>\n      </mu-button>\n      时间卡片\n      <mu-button icon slot=\"right\" @click=\"createTimeCard()\">\n        <mu-icon value=\"add\"></mu-icon>\n      </mu-button>\n    </mu-appbar>\n    <!-- Main Content -->\n    <div style=\"width: 100%; background: #fff; padding: 18px;\">\n      <mu-card class=\"time-card\" v-for=\"(timeCard, cardIndex) in timeCards\" :key=\"cardIndex\">\n        <mu-button icon class=\"delete-time-card\" @click=\"deleteTimeCard(cardIndex)\">\n          <mu-icon value=\"clear\"></mu-icon>\n        </mu-button>\n        <mu-card-text>\n          <mu-form :model=\"timeCard\" class=\"mu-demo-form\">\n            <mu-form-item prop=\"activity\">\n              <mu-text-field placeholder='请输入活动名称，如‘学习英语’' v-model=\"timeCard.activity\" @change=\"updateCardActivity(cardIndex)\"></mu-text-field>\n            </mu-form-item>\n            <mu-flex class=\"flex-wrapper\" align-items=\"center\" v-for=\"(timeSpan, spanIndex) in timeCard.timeSpans\" :key=\"spanIndex\">\n              <mu-flex class=\"flex-demo\" justify-content=\"center\" fill>\n                <mu-date-input placeholder=\"开始时间\" v-model=\"timeSpan.startTime\" type=\"time\" view-type=\"list\" clock-type=\"24hr\" @change=\"onDatePickerChange(cardIndex, spanIndex, 'start')\"></mu-date-input>\n              </mu-flex>\n              <mu-flex class=\"flex-demo\" justify-content=\"center\" fill>\n                <mu-date-input placeholder=\"结束时间\" v-model=\"timeSpan.endTime\" type=\"time\" view-type=\"list\" clock-type=\"24hr\" @change=\"onDatePickerChange(cardIndex, spanIndex, 'end')\"></mu-date-input>\n              </mu-flex>\n            </mu-flex>\n            <mu-button full-width color=\"primary\" @click=\"createTimeSpan(cardIndex)\">\n              添加时间段\n              <mu-icon value=\"add_circle_outline\" right></mu-icon>\n            </mu-button>\n          </mu-form>\n        </mu-card-text>\n      </mu-card>\n    </div>\n    <!-- <router-link to=\"/sign-up\">\n      <mu-button full-width color=\"primary\">\n        <mu-icon value=\"add\" left></mu-icon>\n        注册\n      </mu-button>\n    </router-link> -->\n  </mu-container>\n</template>\n<script>\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      // 时间卡片数组\n      timeCards: []\n    }\n  },\n  methods: {\n    /**\n     * 创建时间卡片\n     */\n    createTimeCard() {\n      this.$http.get(this.BASE_API + '/create-time-card?user_id=' + this.userInfo.id).then(response => {\n        if (response.body.result) {\n          this.getTodayTimeCard()\n          this.$toast.success(response.body.message)\n        } else {\n          this.$toast.error(response.body.message)\n        }\n      })\n    },\n\n    /**\n     * 为时间卡片添加时间段\n     */\n    createTimeSpan(cardIndex) {\n      this.timeCards[cardIndex].timeSpans.push({\n        id: -1,\n        startTime: 0,\n        endTime: 0\n      })\n    },\n\n    /**\n     * 获取今天的时间卡片\n     */\n    getTodayTimeCard() {\n      this.$http.get(this.BASE_API + '/get-today-time-card?user_id=' + this.userInfo.id).then(response => {\n        if (response.body.result) {\n          this.timeCards = response.body.data\n        }\n      })\n    },\n\n    /**\n     * 事件选择器值发生变化的监听器，用于创建TimeCard的TimeSpan\n     */\n    onDatePickerChange(cardIndex, spanIndex, type) {\n      let startTime = this.timeCards[cardIndex].timeSpans[spanIndex].startTime\n      let endTime = this.timeCards[cardIndex].timeSpans[spanIndex].endTime\n      let cardId = this.timeCards[cardIndex].id\n      let spanId = this.timeCards[cardIndex].timeSpans[spanIndex].id\n\n      if(startTime != 0 && endTime != 0) {\n        if(endTime - startTime > 0) {\n          if(spanId == -1) {\n            // 创建\n            this.$http.get(this.BASE_API + '/create-time-span?card_id=' + cardId + '&start_time=' + startTime.getTime() + '&end_time=' + endTime.getTime()).then(response => {\n              if (response.body.result) {\n                this.getTodayTimeCard()\n                this.$toast.success(response.body.message)\n              } else {\n                this.$toast.error(response.body.message)\n              }\n            })\n          } else {\n            //更新\n            this.$http.get(this.BASE_API + '/update-time-span?card_id=' + cardId + '&span_id=' + spanId + '&start_time=' + startTime.getTime() + '&end_time=' + endTime.getTime()).then(response => {\n              if (response.body.result) {\n                this.getTodayTimeCard()\n                this.$toast.success(response.body.message)\n              } else {\n                this.$toast.error(response.body.message)\n              }\n            })\n          }\n          \n        } else {\n          this.$toast.error('结束时间不能小于开始时间，请重新输入')\n        }\n      }\n    },\n\n    /**\n     * 更新TimeCard的activity\n     */\n    updateCardActivity(cardIndex) {\n      let cardId = this.timeCards[cardIndex].id\n      let activity = this.timeCards[cardIndex].activity.trim()\n\n      if(activity.length > 0){\n        this.$http.get(this.BASE_API + '/update-card-activity?card_id=' + cardId + '&activity=' + activity).then(response => {\n          if (response.body.result) {\n            this.$toast.success(response.body.message)\n          } else {\n            this.$toast.error(response.body.message)\n          }\n        })\n      }\n    },\n\n    /**\n     * 删除时间卡片\n     */\n    deleteTimeCard(cardIndex) {\n      let cardId = this.timeCards[cardIndex].id\n\n      this.$http.get(this.BASE_API + '/delete-time-card?card_id=' + cardId).then(response => {\n        if (response.body.result) {\n          this.getTodayTimeCard()\n          this.$toast.success(response.body.message)\n        } else {\n          this.$toast.error(response.body.message)\n        }\n      })\n    }\n  },\n  mounted() {\n    this.getTodayTimeCard()\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.flex-demo {\n  width: 0px;\n  text-align: center;\n}\n.time-card {\n  position: relative;\n  width: 100%;\n  margin: 24px auto;\n}\n.delete-time-card {\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: -14px;\n  right: -14px;\n  border: 1px solid #ccc;\n  background: #fff;\n}\n</style>\n"],"sourceRoot":"src/components"}]}